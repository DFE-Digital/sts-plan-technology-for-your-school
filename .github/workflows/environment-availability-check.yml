name: Check Environment Availability

on:
  schedule:
    - cron: '*/15 * * * *'  # every 15 minutes
  workflow_dispatch:

jobs:
  ping-environments:
    name: Ping environments
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - env_name: Development
            env_url: "https://s190d01-plantech-container-app-url-h4bte8b4d7cqgegp.z01.azurefd.net/information-asset-register"
          - env_name: Test
            env_url: "https://s190t01-plantech-container-app-url-emh7dccjg7gjgeef.z01.azurefd.net/information-asset-register"
          - env_name: Staging
            env_url: "https://staging.plan-technology-for-your-school.education.gov.uk/information-asset-register"
          - env_name: Production
            env_url: "https://plan-technology-for-your-school.education.gov.uk/information-asset-register"
          - env_name: DfE Sign In
            env_url: "https://interactions.signin.education.gov.uk"

    steps:
      - name: Prepare empty failures list
        run: |
          mkdir -p tmp
          echo "failures:" > tmp/env-check-failures.yml

      - name: Check ${{ matrix.env_name }} availability
        run: |
          echo "🌐 Pinging ${{ matrix.env_name }} (${{ matrix.env_url }})..."
          status_code=$(curl -s -o /dev/null -w "%{http_code}" "${{ matrix.env_url }}")
          
          if [[ "$status_code" -ne 200 && "$status_code" -ne 302 ]]; then
            echo "❌ ${{ matrix.env_name }} returned status code $status_code"
            echo "- name: ${{ matrix.env_name }}" >> tmp/env-check-failures.yml
            echo "  url: ${{ matrix.env_url }}" >> tmp/env-check-failures.yml
            echo "  status: $status_code" >> tmp/env-check-failures.yml
            exit 1
          fi

          echo "✅ ${{ matrix.env_name }} is up (HTTP $status_code)"

      - name: Upload failure artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: env-check-failures-${{ matrix.env_name }}
          path: tmp/env-check-failures.yml

  notify:
    name: Send email notifications
    runs-on: ubuntu-latest
    needs: ping-environments
    if: always()

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all failure artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: env-check-failures-*
          path: downloaded-failures

      - name: Install Notify client
        run: pip install notifications-python-client pyyaml

      - name: Send environment down alert
        env:
          NOTIFICATIONS_API_KEY: ${{ secrets.NOTIFICATIONS_SERVICE_GOV_UK_API_KEY }}
        run: python .github/scripts/notify-down-envs.py
