name: Multi stage build & deploy

on:
  workflow_dispatch:
  push:
    branches: ["main", "development"]
    paths:
      - "src/**"
      - ".github/workflows/matrix-deploy.yml"
      - ".gitmodules"

jobs:
  set-env:
    runs-on: ubuntu-22.04
    name: Set Environment (Matrix Deploy)
    outputs:
      branch: ${{ steps.var.outputs.branch }}
      checked-out-sha: ${{ steps.var.outputs.checked-out-sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - id: var
        run: |
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          CHECKED_OUT_SHA="$(git log -1 '--format=format:%H')"
          echo "branch=$GIT_BRANCH" >> $GITHUB_OUTPUT
          echo "checked-out-sha=${CHECKED_OUT_SHA}" >> $GITHUB_OUTPUT

  create-and-publish-image:
    needs: set-env
    name: Create & Publish Image
    uses: ./.github/workflows/build-image.yml
    secrets: inherit
    with:
      branch: ${{ needs.set-env.outputs.branch }}
      checked-out-sha: ${{ needs.set-env.outputs.checked-out-sha }}

  create-and-tag-release:
    needs: [set-env, create-and-publish-image]
    name: Create & Tag Release
    uses: ./.github/workflows/create-tag-release.yml
    secrets: inherit

  deploy-to-dev-and-test:
    name: Deployment to Dev & Test
    needs: [
              set-env, 
              create-and-publish-image
            ]
    if: always()
    strategy:
      max-parallel: 1
      fail-fast: true
      matrix:
        target: [Dev, Tst]
    uses: ./.github/workflows/deploy-image.yml
    with:
      environment: ${{ matrix.target }}
      branch: ${{ needs.set-env.outputs.branch }}
      checked-out-sha: ${{ needs.set-env.outputs.checked-out-sha }}
    secrets: inherit

  generate-subtopic-visualisations:
    needs: [set-env, deploy-to-dev-and-test]
    name: Run the visualisation workflow against staging content.
    if: ${{ needs.set-env.outputs.branch == 'main' }}
    strategy:
      max-parallel: 1
      fail-fast: true
      matrix:
        target: [Staging]
    uses: ./.github/workflows/qa-viz.yml
    with:
      environment: ${{ matrix.target }}
    secrets: inherit

  deploy-to-staging:
    needs: [
              set-env,
              create-and-publish-image,
              deploy-to-dev-and-test
            ]
    name: Deployment to Staging
    if: |
      always() &&
      needs.set-env.outputs.branch == 'main'
    strategy:
      max-parallel: 1
      fail-fast: true
      matrix:
        target: [Staging]
    uses: ./.github/workflows/deploy-image.yml
    with:
      environment: ${{ matrix.target }}
      branch: ${{ needs.set-env.outputs.branch }}
      checked-out-sha: ${{ needs.set-env.outputs.checked-out-sha }}
    secrets: inherit

  deploy-to-production:
    needs:
      [
        set-env,
        create-and-publish-image,
        deploy-to-dev-and-test,
        deploy-to-staging
      ]
    name: Deployment to Production
    if: |
      always() &&
      needs.set-env.outputs.branch == 'main'
    strategy:
      max-parallel: 1
      fail-fast: true
      matrix:
        target: [Production]
    uses: ./.github/workflows/deploy-image.yml
    with:
      environment: ${{ matrix.target }}
      branch: ${{ needs.set-env.outputs.branch }}
      checked-out-sha: ${{ needs.set-env.outputs.checked-out-sha }}
    secrets: inherit
