name: Terraform Plan

on:
  workflow_dispatch:
    inputs:
      environment:
        type: string
        description: "The environment to run terraform plan against:"
        required: true
  workflow_call:
    inputs:
      environment:
        type: string
        required: true

env:
  DOTNET_VERSION: ${{ vars.DOTNET_VERSION }}

  ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}

  AZ_KEYVAULT_NAME: ${{ secrets.AZ_ACA_RESOURCE_GROUP	}}-kv
  AZ_SA_COSTING_NAME: ${{ secrets.AZ_ACA_RESOURCE_GROUP }}costing

  TF_BACKEND_STORAGE_ACCOUNT_NAME: ${{ secrets.TF_BACKEND_STORAGE_ACCOUNT_NAME }}
  TF_BACKEND_CONTAINER_NAME: ${{ secrets.TF_BACKEND_CONTAINER_NAME }}
  TF_BACKEND_KEY: ${{ secrets.TF_BACKEND_KEY }}
  TF_BACKEND_RESOURCE_GROUP: ${{ secrets.TF_BACKEND_RESOURCE_GROUP }}

  TF_VAR_project_name: ${{ secrets.DFE_PROJECT_NAME }}
  TF_VAR_environment: ${{ secrets.AZ_ENVIRONMENT }}
  TF_VAR_azure_location: ${{ vars.AZ_LOCATION }}
  TF_VAR_az_app_kestrel_endpoint: ${{ vars.KESTRELENDPOINT }}
  TF_VAR_az_tag_environment: ${{ vars.AZ_TAG_ENVIRONMENT }}
  TF_VAR_az_tag_product: ${{ vars.AZ_TAG_PRODUCT }}
  TF_VAR_az_sql_azuread_admin_username: ${{ secrets.AZ_SERVICE_PRINCIPAL }}
  TF_VAR_az_sql_admin_password: ${{secrets.AZ_SQL_ADMIN_PASSWORD}}
  TF_VAR_az_sql_azuread_admin_objectid: ${{ secrets.AZ_OBJECT_ID }}
  TF_VAR_cdn_frontdoor_origin_host_header_override: ${{secrets.AZ_CDN_FRONTDOOR_ORIGIN_HOST_HEADER_OVERRIDE}}
  TF_VAR_az_sql_admin_userid_postfix: ${{secrets.AZ_SQL_ADMIN_USERID_POSTFIX}}
  TF_VAR_registry_server: ${{ secrets.AZ_ACR_URL }}
  TF_VAR_registry_username: ${{ secrets.AZ_CLIENT_ID }}
  TF_VAR_registry_password: ${{ secrets.AZ_CLIENT_SECRET }}
  
  container_app_min_replicas: ${{vars.CONTAINER_MIN_REPLICAS}}
  container_app_max_replicas: ${{vars.CONTAINER_MAX_REPLICAS}}
  container_app_http_concurrency: ${{vars.CONTAINER_HTTP_CONCURRENCY}}

  container_environment: ${{ inputs.environment }}

  TF_WORKING_DIRECTORY: terraform/container-app

jobs:
  terraform-plan:
    name: Terraform plan
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{env.TF_WORKING_DIRECTORY}}
    environment: ${{ inputs.environment }}
    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.7

      - name: Get GitHub Runner IP
        id: whats-my-ip
        uses: ./.github/actions/whats-my-ip-address

      - name: Set GitHub Runner IP to TF Var
        shell: bash
        run: |
          echo "TF_VAR_github_ip=${{ steps.whats-my-ip.outputs.ip}}" >> $GITHUB_ENV

      - name: Login with AZ
        uses: ./.github/actions/azure-login
        with:
          az_tenant_id: ${{ secrets.AZ_TENANT_ID }}
          az_subscription_id: ${{ secrets.AZ_SUBSCRIPTION_ID }}
          az_client_id: ${{ secrets.AZ_CLIENT_ID }}
          az_client_secret: ${{ secrets.AZ_CLIENT_SECRET }}

      - name: Replace in secret environment variable
        run: |
          AZ_SA_COSTING_NAME="${{ env.AZ_SA_COSTING_NAME }}"
          SA_COSTING_NAME="${AZ_SA_COSTING_NAME//-/}"
          echo "SA_COSTING_NAME=$SA_COSTING_NAME" >> $GITHUB_ENV

      - name: Add Runner to KV Blobforcost SA
        uses: azure/CLI@v1
        with:
          azcliversion: 2.45.0
          inlineScript: |
            az storage account network-rule add --account-name $SA_COSTING_NAME --ip-address ${{ steps.whats-my-ip.outputs.ip }} &> /dev/null

      - name: Add Runner to KV whitelist
        uses: azure/CLI@v1
        with:
          azcliversion: 2.45.0
          inlineScript: |
            az keyvault network-rule add --name ${{ env.AZ_KEYVAULT_NAME }} --ip-address ${{ steps.whats-my-ip.outputs.ip }} &> /dev/null

      - name: Set container app image_tag env variables
        run: |
          IMAGE_TAG=$(az acr repository show-tags -n ${{ secrets.AZ_ACR_URL }} --repository plan-tech-app --top 1 --orderby time_desc |  jq '.[]' | tr -d "\"")
          echo "TF_VAR_image_tag=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Set container app scaling env variables
        run: |
          declare -a env_vars=(
            "container_app_min_replicas"
            "container_app_max_replicas"
            "container_app_http_concurrency"
          )

          for var in "${env_vars[@]}"; do
            env_value="${!var}"
            if [ -n "$env_value" ]; then
              echo "TF_VAR_$var=$env_value" >> $GITHUB_ENV
            fi
          done

          if [ "$container_environment" == "Tst" ]; then
            export container_environment="Test"
          fi
            echo "TF_VAR_container_environment=$container_environment" >> $GITHUB_ENV

      - name: Terraform init
        id: init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ env.TF_BACKEND_RESOURCE_GROUP }}"  \
            -backend-config="storage_account_name=${{ env.TF_BACKEND_STORAGE_ACCOUNT_NAME }}"  \
            -backend-config="container_name=${{ env.TF_BACKEND_CONTAINER_NAME }}"  \
            -backend-config="key=${{ env.TF_BACKEND_KEY }}"

      - name: Plan Terraform changes
        id: plan
        run: terraform plan

      - name: Terraform import
        id: import
        run: terraform import module.main_hosting.azurerm_mssql_server_extended_auditing_policy.default[0] /subscriptions/020c6d9f-bcd5-4aab-a512-431625e93225/resourceGroups/s190p02-plantech/providers/Microsoft.Sql/servers/s190p02-plantech/extendedAuditingSettings/Default

      - name: Terraform State
        id: state
        run: terraform state list && terraform state list module.main_hosting.azurerm_mssql_server_extended_auditing_policy.default[0]

      - name: Remove Runner to Blobforcost SA
        uses: azure/CLI@v1
        if: always()
        with:
          azcliversion: 2.45.0
          inlineScript: |
            az storage account network-rule remove --account-name $SA_COSTING_NAME --ip-address ${{ steps.whats-my-ip.outputs.ip }} &> /dev/null

      - name: Remove Runner to KV whitelist
        uses: azure/CLI@v1
        if: always()
        with:
          azcliversion: 2.45.0
          inlineScript: |
            az keyvault network-rule remove --name ${{ env.AZ_KEYVAULT_NAME }} --ip-address ${{ steps.whats-my-ip.outputs.ip }} &> /dev/null