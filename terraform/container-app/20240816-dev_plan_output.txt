Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
  ~ update in-place
  - destroy
-/+ destroy and then create replacement
 <= read (data resources)

Terraform will perform the following actions:

  # azapi_resource.contentful_function will be created
  + resource "azapi_resource" "contentful_function" {
      + body                      = (sensitive value)
      + id                        = (known after apply)
      + ignore_casing             = false
      + ignore_missing_property   = true
      + location                  = "northeurope"
      + name                      = "s190d01-plantechcontentfulfunction"
      + output                    = (known after apply)
      + parent_id                 = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech"
      + removing_special_chars    = false
      + schema_validation_enabled = false
      + tags                      = {
          + "Environment"      = "Dev"
          + "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }
      + type                      = "Microsoft.Web/sites@2023-12-01"

      + identity {
          + identity_ids = [
              + "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.ManagedIdentity/userAssignedIdentities/s190d01-plantech-mi",
            ]
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "UserAssigned"
        }
    }

  # azurerm_app_service_connection.azurekeyvaultconnector will be destroyed
  # (because azurerm_app_service_connection.azurekeyvaultconnector is not in configuration)
   resource "azurerm_app_service_connection" "azurekeyvaultconnector" {
       app_service_id     = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Web/sites/s190d01-plantechcontentfulfunction" -> null
       client_type        = "dotnet" -> null
       id                 = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Web/sites/s190d01-plantechcontentfulfunction/providers/Microsoft.ServiceLinker/linkers/azurekeyvaultconnection" -> null
       name               = "azurekeyvaultconnection" -> null
       target_resource_id = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.KeyVault/vaults/s190d01-plantech-kv" -> null

       authentication {
           client_id       = "e4d19ac5-d0c2-4151-ba7e-3ccbc8b5da29" -> null
           subscription_id = "01ca3b42-9780-4628-806b-79279e3c7e89" -> null
           type            = "userAssignedIdentity" -> null
        }
    }

  # azurerm_app_service_connection.azuresqlconnector will be destroyed
  # (because azurerm_app_service_connection.azuresqlconnector is not in configuration)
   resource "azurerm_app_service_connection" "azuresqlconnector" {
       app_service_id     = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Web/sites/s190d01-plantechcontentfulfunction" -> null
       client_type        = "dotnet" -> null
       id                 = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Web/sites/s190d01-plantechcontentfulfunction/providers/Microsoft.ServiceLinker/linkers/azuresqlconnection" -> null
       name               = "azuresqlconnection" -> null
       target_resource_id = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Sql/servers/s190d01-plantech/databases/s190d01-plantech-sqldb" -> null

       authentication {
           client_id       = "e4d19ac5-d0c2-4151-ba7e-3ccbc8b5da29" -> null
           subscription_id = "01ca3b42-9780-4628-806b-79279e3c7e89" -> null
           type            = "userAssignedIdentity" -> null
        }
    }

  # azurerm_key_vault_access_policy.vault_access_policy_mi will be updated in-place
  ~ resource "azurerm_key_vault_access_policy" "vault_access_policy_mi" {
      ~ certificate_permissions = [
           "Get",
        ]
        id                      = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.KeyVault/vaults/s190d01-plantech-kv/objectId/a2860d8c-4f4a-4261-8a5a-599277cb5752"
      ~ key_permissions         = [
          + "List",
            "Get",
          + "WrapKey",
          + "UnwrapKey",
        ]
      ~ secret_permissions      = [
          + "List",
            "Get",
        ]
        # (4 unchanged attributes hidden)
    }

  # azurerm_linux_function_app.contentful_function will be destroyed
  # (because azurerm_linux_function_app.contentful_function is not in configuration)
   resource "azurerm_linux_function_app" "contentful_function" {
       app_settings                                   = {
           "AZURE_CLIENT_ID"                                         = "e4d19ac5-d0c2-4151-ba7e-3ccbc8b5da29"
           "AZURE_KEYVAULT_AZUREKEYVAULTCONNECTION_CLIENTID"         = "e4d19ac5-d0c2-4151-ba7e-3ccbc8b5da29"
           "AZURE_KEYVAULT_AZUREKEYVAULTCONNECTION_RESOURCEENDPOINT" = "https://s190d01-plantech-kv.vault.azure.net/"
           "AZURE_KEYVAULT_AZUREKEYVAULTCONNECTION_SCOPE"            = "https://vault.azure.net/.default"
           "AZURE_KEYVAULT_CLIENTID"                                 = "e4d19ac5-d0c2-4151-ba7e-3ccbc8b5da29"
           "AZURE_KEYVAULT_RESOURCEENDPOINT"                         = "https://s190d01-plantech-kv.vault.azure.net/"
           "AZURE_KEYVAULT_SCOPE"                                    = "https://vault.azure.net/.default"
           "AZURE_SQL_AZURESQLCONNECTION_CONNECTIONSTRING"           = "Data Source=s190d01-plantech.database.windows.net,1433;Initial Catalog=s190d01-plantech-sqldb;User ID=e4d19ac5-d0c2-4151-ba7e-3ccbc8b5da29;Authentication=ActiveDirectoryManagedIdentity"
           "AZURE_SQL_CONNECTIONSTRING"                              = "@Microsoft.KeyVault(VaultName=s190d01-plantech-kv;SecretName=connectionstrings--database)"
           "AzureWebJobsServiceBus"                                  = (sensitive value)
           "KeyVaultReferenceIdentity"                               = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.ManagedIdentity/userAssignedIdentities/s190d01-plantech-mi"
           "WEBSITE_ENABLE_SYNC_UPDATE_SITE"                         = "true"
           "WEBSITE_MOUNT_ENABLED"                                   = "1"
           "WEBSITE_RUN_FROM_PACKAGE"                                = ""
        } -> null
       builtin_logging_enabled                        = true -> null
       client_certificate_enabled                     = false -> null
       client_certificate_mode                        = "Optional" -> null
       content_share_force_disabled                   = false -> null
       custom_domain_verification_id                  = (sensitive value) -> null
       daily_memory_time_quota                        = 0 -> null
       default_hostname                               = "s190d01-plantechcontentfulfunction.azurewebsites.net" -> null
       enabled                                        = true -> null
       ftp_publish_basic_authentication_enabled       = true -> null
       functions_extension_version                    = "~4" -> null
       https_only                                     = false -> null
       id                                             = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Web/sites/s190d01-plantechcontentfulfunction" -> null
       key_vault_reference_identity_id                = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.ManagedIdentity/userAssignedIdentities/s190d01-plantech-mi" -> null
       kind                                           = "functionapp,linux" -> null
       location                                       = "westeurope" -> null
       name                                           = "s190d01-plantechcontentfulfunction" -> null
       outbound_ip_address_list                       = [
           "51.144.224.93",
           "52.232.70.142",
           "52.232.4.132",
           "52.232.64.246",
           "52.178.92.96",
        ] -> null
       outbound_ip_addresses                          = "51.144.224.93,52.232.70.142,52.232.4.132,52.232.64.246,52.178.92.96" -> null
       possible_outbound_ip_address_list              = [
           "51.144.224.93",
           "52.232.70.142",
           "52.232.4.132",
           "52.232.64.246",
           "51.145.159.13",
           "52.136.236.15",
           "20.8.145.207",
           "20.8.145.210",
           "20.31.24.96",
           "20.31.24.120",
           "20.31.24.253",
           "20.31.25.72",
           "20.31.25.170",
           "20.31.26.102",
           "20.31.27.42",
           "20.31.27.207",
           "20.31.28.244",
           "20.31.29.149",
           "52.178.92.96",
        ] -> null
       possible_outbound_ip_addresses                 = "51.144.224.93,52.232.70.142,52.232.4.132,52.232.64.246,51.145.159.13,52.136.236.15,20.8.145.207,20.8.145.210,20.31.24.96,20.31.24.120,20.31.24.253,20.31.25.72,20.31.25.170,20.31.26.102,20.31.27.42,20.31.27.207,20.31.28.244,20.31.29.149,52.178.92.96" -> null
       public_network_access_enabled                  = true -> null
       resource_group_name                            = "s190d01-plantech" -> null
       service_plan_id                                = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Web/serverFarms/s190d01-plantechappserviceplan" -> null
       site_credential                                = (sensitive value) -> null
       storage_account_access_key                     = (sensitive value) -> null
       storage_account_name                           = "s190d01plantechfuncstr" -> null
       storage_uses_managed_identity                  = false -> null
       tags                                           = {
           "Environment"      = "Dev"
           "Product"          = "Plan Technology for your School"
           "Service Offering" = "Plan Technology for your School"
        } -> null
       webdeploy_publish_basic_authentication_enabled = true -> null

       identity {
           identity_ids = [
               "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.ManagedIdentity/userAssignedIdentities/s190d01-plantech-mi",
            ] -> null
           type         = "UserAssigned" -> null
        }

       site_config {
           always_on                               = false -> null
           app_scale_limit                         = 200 -> null
           application_insights_key                = (sensitive value) -> null
           container_registry_use_managed_identity = false -> null
           default_documents                       = [
               "Default.htm",
               "Default.html",
               "Default.asp",
               "index.htm",
               "index.html",
               "iisstart.htm",
               "default.aspx",
               "index.php",
            ] -> null
           detailed_error_logging_enabled          = false -> null
           elastic_instance_minimum                = 0 -> null
           ftps_state                              = "Disabled" -> null
           health_check_eviction_time_in_min       = 0 -> null
           http2_enabled                           = false -> null
           ip_restriction_default_action           = "Allow" -> null
           linux_fx_version                        = "DOTNET-ISOLATED|8.0" -> null
           load_balancing_mode                     = "LeastRequests" -> null
           managed_pipeline_mode                   = "Integrated" -> null
           minimum_tls_version                     = "1.2" -> null
           pre_warmed_instance_count               = 0 -> null
           remote_debugging_enabled                = false -> null
           runtime_scale_monitoring_enabled        = false -> null
           scm_ip_restriction_default_action       = "Allow" -> null
           scm_minimum_tls_version                 = "1.2" -> null
           scm_type                                = "None" -> null
           scm_use_main_ip_restriction             = false -> null
           use_32_bit_worker                       = false -> null
           vnet_route_all_enabled                  = false -> null
           websockets_enabled                      = false -> null
           worker_count                            = 1 -> null

           application_stack {
               dotnet_version              = "8.0" -> null
               use_custom_runtime          = false -> null
               use_dotnet_isolated_runtime = true -> null
            }
        }

       sticky_settings {
           app_setting_names       = [
               "AZURE_SQL_AZURESQLCONNECTION_CONNECTIONSTRING",
               "AZURE_KEYVAULT_AZUREKEYVAULTCONNECTION_RESOURCEENDPOINT",
               "AZURE_KEYVAULT_AZUREKEYVAULTCONNECTION_CLIENTID",
               "AZURE_KEYVAULT_AZUREKEYVAULTCONNECTION_SCOPE",
            ] -> null
           connection_string_names = [] -> null
        }
    }

  # azurerm_private_dns_zone.blob_storage will be created
  + resource "azurerm_private_dns_zone" "blob_storage" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.blob.core.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "s190d01-plantech"
      + tags                                                  = {
          + "Environment"      = "Dev"
          + "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }
    }

  # azurerm_private_dns_zone.database will be created
  + resource "azurerm_private_dns_zone" "database" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.database.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "s190d01-plantech"
      + tags                                                  = {
          + "Environment"      = "Dev"
          + "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }
    }

  # azurerm_private_dns_zone.files_storage will be created
  + resource "azurerm_private_dns_zone" "files_storage" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.file.core.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "s190d01-plantech"
      + tags                                                  = {
          + "Environment"      = "Dev"
          + "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }
    }

  # azurerm_private_dns_zone.keyvault will be created
  + resource "azurerm_private_dns_zone" "keyvault" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.vaultcore.azure.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "s190d01-plantech"
      + tags                                                  = {
          + "Environment"      = "Dev"
          + "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }
    }

  # azurerm_private_dns_zone_virtual_network_link.blob_storage will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "blob_storage" {
      + id                    = (known after apply)
      + name                  = "function_vn"
      + private_dns_zone_name = "privatelink.blob.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "s190d01-plantech"
      + virtual_network_id    = (known after apply)
    }

  # azurerm_private_dns_zone_virtual_network_link.database_default will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "database_default" {
      + id                    = (known after apply)
      + name                  = "default_vnet"
      + private_dns_zone_name = "privatelink.database.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "s190d01-plantech"
      + virtual_network_id    = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Network/virtualNetworks/s190d01-plantechdefault"
    }

  # azurerm_private_dns_zone_virtual_network_link.database_function will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "database_function" {
      + id                    = (known after apply)
      + name                  = "function_vnet"
      + private_dns_zone_name = "privatelink.database.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "s190d01-plantech"
      + virtual_network_id    = (known after apply)
    }

  # azurerm_private_dns_zone_virtual_network_link.files_storage will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "files_storage" {
      + id                    = (known after apply)
      + name                  = "function_vnet"
      + private_dns_zone_name = "privatelink.file.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "s190d01-plantech"
      + virtual_network_id    = (known after apply)
    }

  # azurerm_private_dns_zone_virtual_network_link.keyvault_to_defaultvnet will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "keyvault_to_defaultvnet" {
      + id                    = (known after apply)
      + name                  = "default_vnet"
      + private_dns_zone_name = "privatelink.vaultcore.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "s190d01-plantech"
      + virtual_network_id    = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Network/virtualNetworks/s190d01-plantechdefault"
    }

  # azurerm_private_dns_zone_virtual_network_link.keyvault_to_functionvnet will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "keyvault_to_functionvnet" {
      + id                    = (known after apply)
      + name                  = "function_vnet"
      + private_dns_zone_name = "privatelink.vaultcore.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "s190d01-plantech"
      + virtual_network_id    = (known after apply)
    }

  # azurerm_private_endpoint.blob_storage will be created
  + resource "azurerm_private_endpoint" "blob_storage" {
      + custom_dns_configs            = (known after apply)
      + custom_network_interface_name = "s190d01-plantech-blob-storage-nic"
      + id                            = (known after apply)
      + location                      = "northeurope"
      + name                          = "s190d01-plantech-blob-storage"
      + network_interface             = (known after apply)
      + private_dns_zone_configs      = (known after apply)
      + resource_group_name           = "s190d01-plantech"
      + subnet_id                     = (known after apply)
      + tags                          = {
          + "Environment"      = "Dev"
          + "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }

      + private_dns_zone_group {
          + id                   = (known after apply)
          + name                 = "default"
          + private_dns_zone_ids = (known after apply)
        }

      + private_service_connection {
          + is_manual_connection           = false
          + name                           = "s190d01-plantech-blob-storage"
          + private_connection_resource_id = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Storage/storageAccounts/s190d01plantechfuncstr"
          + private_ip_address             = (known after apply)
          + subresource_names              = [
              + "blob",
            ]
        }
    }

  # azurerm_private_endpoint.database will be created
  + resource "azurerm_private_endpoint" "database" {
      + custom_dns_configs            = (known after apply)
      + custom_network_interface_name = "privatelink.database.windows.net"
      + id                            = (known after apply)
      + location                      = "westeurope"
      + name                          = "s190d01-plantech-db"
      + network_interface             = (known after apply)
      + private_dns_zone_configs      = (known after apply)
      + resource_group_name           = "s190d01-plantech"
      + subnet_id                     = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Network/virtualNetworks/s190d01-plantechdefault/subnets/s190d01-plantechcontainerappsinfra"
      + tags                          = {
          + "Environment"      = "Dev"
          + "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }

      + private_dns_zone_group {
          + id                   = (known after apply)
          + name                 = "default"
          + private_dns_zone_ids = (known after apply)
        }

      + private_service_connection {
          + is_manual_connection           = false
          + name                           = "s190d01-plantech-db"
          + private_connection_resource_id = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Sql/servers/s190d01-plantech"
          + private_ip_address             = (known after apply)
          + subresource_names              = [
              + "sqlServer",
            ]
        }
    }

  # azurerm_private_endpoint.files_storage will be created
  + resource "azurerm_private_endpoint" "files_storage" {
      + custom_dns_configs            = (known after apply)
      + custom_network_interface_name = "s190d01-plantech-files-storage-nic"
      + id                            = (known after apply)
      + location                      = "northeurope"
      + name                          = "s190d01-plantech-files-storage"
      + network_interface             = (known after apply)
      + private_dns_zone_configs      = (known after apply)
      + resource_group_name           = "s190d01-plantech"
      + subnet_id                     = (known after apply)
      + tags                          = {
          + "Environment"      = "Dev"
          + "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }

      + private_dns_zone_group {
          + id                   = (known after apply)
          + name                 = "default"
          + private_dns_zone_ids = (known after apply)
        }

      + private_service_connection {
          + is_manual_connection           = false
          + name                           = "s190d01-plantech-files-storage"
          + private_connection_resource_id = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Storage/storageAccounts/s190d01plantechfuncstr"
          + private_ip_address             = (known after apply)
          + subresource_names              = [
              + "file",
            ]
        }
    }

  # azurerm_private_endpoint.keyvault will be created
  + resource "azurerm_private_endpoint" "keyvault" {
      + custom_dns_configs            = (known after apply)
      + custom_network_interface_name = "s190d01-plantech-keyvault-nic"
      + id                            = (known after apply)
      + location                      = "westeurope"
      + name                          = "s190d01-plantech-keyvault"
      + network_interface             = (known after apply)
      + private_dns_zone_configs      = (known after apply)
      + resource_group_name           = "s190d01-plantech"
      + subnet_id                     = (known after apply)
      + tags                          = {
          + "Environment"      = "Dev"
          + "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }

      + private_dns_zone_group {
          + id                   = (known after apply)
          + name                 = "default"
          + private_dns_zone_ids = (known after apply)
        }

      + private_service_connection {
          + is_manual_connection           = false
          + name                           = "s190d01-plantech-keyvault"
          + private_connection_resource_id = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.KeyVault/vaults/s190d01-plantech-kv"
          + private_ip_address             = (known after apply)
          + subresource_names              = [
              + "vault",
            ]
        }
    }

  # azurerm_service_plan.function_plan must be replaced
-/+ resource "azurerm_service_plan" "function_plan" {
      ~ id                           = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Web/serverFarms/s190d01-plantechappserviceplan" -> (known after apply)
      ~ kind                         = "functionapp" -> (known after apply)
      ~ location                     = "westeurope" -> "northeurope" # forces replacement
      ~ maximum_elastic_worker_count = 1 -> (known after apply)
        name                         = "s190d01-plantechappserviceplan"
      ~ reserved                     = true -> (known after apply)
      ~ sku_name                     = "Y1" -> "FC1"
        tags                         = {
            "Environment"      = "Dev"
            "Product"          = "Plan Technology for your School"
            "Service Offering" = "Plan Technology for your School"
        }
      ~ worker_count                 = 0 -> (known after apply)
       zone_balancing_enabled       = false -> null
        # (3 unchanged attributes hidden)
    }

  # azurerm_storage_account.costing_storage will be created
  + resource "azurerm_storage_account" "costing_storage" {
      + access_tier                        = (known after apply)
      + account_kind                       = "StorageV2"
      + account_replication_type           = "LRS"
      + account_tier                       = "Standard"
      + allow_nested_items_to_be_public    = false
      + cross_tenant_replication_enabled   = true
      + default_to_oauth_authentication    = false
      + dns_endpoint_type                  = "Standard"
      + enable_https_traffic_only          = true
      + id                                 = (known after apply)
      + infrastructure_encryption_enabled  = false
      + is_hns_enabled                     = false
      + large_file_share_enabled           = (known after apply)
      + local_user_enabled                 = true
      + location                           = "westeurope"
      + min_tls_version                    = "TLS1_2"
      + name                               = "s190d01plantechcosting"
      + nfsv3_enabled                      = false
      + primary_access_key                 = (sensitive value)
      + primary_blob_connection_string     = (sensitive value)
      + primary_blob_endpoint              = (known after apply)
      + primary_blob_host                  = (known after apply)
      + primary_blob_internet_endpoint     = (known after apply)
      + primary_blob_internet_host         = (known after apply)
      + primary_blob_microsoft_endpoint    = (known after apply)
      + primary_blob_microsoft_host        = (known after apply)
      + primary_connection_string          = (sensitive value)
      + primary_dfs_endpoint               = (known after apply)
      + primary_dfs_host                   = (known after apply)
      + primary_dfs_internet_endpoint      = (known after apply)
      + primary_dfs_internet_host          = (known after apply)
      + primary_dfs_microsoft_endpoint     = (known after apply)
      + primary_dfs_microsoft_host         = (known after apply)
      + primary_file_endpoint              = (known after apply)
      + primary_file_host                  = (known after apply)
      + primary_file_internet_endpoint     = (known after apply)
      + primary_file_internet_host         = (known after apply)
      + primary_file_microsoft_endpoint    = (known after apply)
      + primary_file_microsoft_host        = (known after apply)
      + primary_location                   = (known after apply)
      + primary_queue_endpoint             = (known after apply)
      + primary_queue_host                 = (known after apply)
      + primary_queue_microsoft_endpoint   = (known after apply)
      + primary_queue_microsoft_host       = (known after apply)
      + primary_table_endpoint             = (known after apply)
      + primary_table_host                 = (known after apply)
      + primary_table_microsoft_endpoint   = (known after apply)
      + primary_table_microsoft_host       = (known after apply)
      + primary_web_endpoint               = (known after apply)
      + primary_web_host                   = (known after apply)
      + primary_web_internet_endpoint      = (known after apply)
      + primary_web_internet_host          = (known after apply)
      + primary_web_microsoft_endpoint     = (known after apply)
      + primary_web_microsoft_host         = (known after apply)
      + public_network_access_enabled      = true
      + queue_encryption_key_type          = "Service"
      + resource_group_name                = "s190d01-plantech"
      + secondary_access_key               = (sensitive value)
      + secondary_blob_connection_string   = (sensitive value)
      + secondary_blob_endpoint            = (known after apply)
      + secondary_blob_host                = (known after apply)
      + secondary_blob_internet_endpoint   = (known after apply)
      + secondary_blob_internet_host       = (known after apply)
      + secondary_blob_microsoft_endpoint  = (known after apply)
      + secondary_blob_microsoft_host      = (known after apply)
      + secondary_connection_string        = (sensitive value)
      + secondary_dfs_endpoint             = (known after apply)
      + secondary_dfs_host                 = (known after apply)
      + secondary_dfs_internet_endpoint    = (known after apply)
      + secondary_dfs_internet_host        = (known after apply)
      + secondary_dfs_microsoft_endpoint   = (known after apply)
      + secondary_dfs_microsoft_host       = (known after apply)
      + secondary_file_endpoint            = (known after apply)
      + secondary_file_host                = (known after apply)
      + secondary_file_internet_endpoint   = (known after apply)
      + secondary_file_internet_host       = (known after apply)
      + secondary_file_microsoft_endpoint  = (known after apply)
      + secondary_file_microsoft_host      = (known after apply)
      + secondary_location                 = (known after apply)
      + secondary_queue_endpoint           = (known after apply)
      + secondary_queue_host               = (known after apply)
      + secondary_queue_microsoft_endpoint = (known after apply)
      + secondary_queue_microsoft_host     = (known after apply)
      + secondary_table_endpoint           = (known after apply)
      + secondary_table_host               = (known after apply)
      + secondary_table_microsoft_endpoint = (known after apply)
      + secondary_table_microsoft_host     = (known after apply)
      + secondary_web_endpoint             = (known after apply)
      + secondary_web_host                 = (known after apply)
      + secondary_web_internet_endpoint    = (known after apply)
      + secondary_web_internet_host        = (known after apply)
      + secondary_web_microsoft_endpoint   = (known after apply)
      + secondary_web_microsoft_host       = (known after apply)
      + sftp_enabled                       = false
      + shared_access_key_enabled          = true
      + table_encryption_key_type          = "Service"
      + tags                               = {
          + "Environment"      = "Dev"
          + "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }

      + blob_properties {
          + change_feed_enabled      = false
          + default_service_version  = (known after apply)
          + last_access_time_enabled = false
          + versioning_enabled       = false

          + container_delete_retention_policy {
              + days = 7
            }

          + delete_retention_policy {
              + days                     = 7
              + permanent_delete_enabled = false
            }
        }

      + identity {
          + identity_ids = [
              + "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.ManagedIdentity/userAssignedIdentities/s190d01-plantech-mi",
            ]
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "UserAssigned"
        }

      + sas_policy {
          + expiration_action = "Log"
          + expiration_period = "00.01:00:00"
        }
    }

  # azurerm_storage_account.function_storage will be updated in-place
  ~ resource "azurerm_storage_account" "function_storage" {
        id                                = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Storage/storageAccounts/s190d01plantechfuncstr"
        name                              = "s190d01plantechfuncstr"
        tags                              = {
            "Environment"      = "Dev"
            "Product"          = "Plan Technology for your School"
            "Service Offering" = "Plan Technology for your School"
        }
        # (40 unchanged attributes hidden)

      ~ network_rules {
          ~ default_action             = "Allow" -> "Deny"
            # (3 unchanged attributes hidden)
        }

      ~ sas_policy {
          ~ expiration_period = "0.01:00:00" -> "00.01:00:00"
            # (1 unchanged attribute hidden)
        }

        # (5 unchanged blocks hidden)
    }

  # azurerm_storage_container.blobforcost will be created
  + resource "azurerm_storage_container" "blobforcost" {
      + container_access_type             = "private"
      + default_encryption_scope          = (known after apply)
      + encryption_scope_override_enabled = true
      + has_immutability_policy           = (known after apply)
      + has_legal_hold                    = (known after apply)
      + id                                = (known after apply)
      + metadata                          = (known after apply)
      + name                              = "blobforcost"
      + resource_manager_id               = (known after apply)
      + storage_account_name              = "s190d01plantechcosting"
    }

  # azurerm_subnet.function_infra_subnet will be created
  + resource "azurerm_subnet" "function_infra_subnet" {
      + address_prefixes                               = [
          + "10.0.0.0/24",
        ]
      + default_outbound_access_enabled                = true
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "s190d01-plantech-functioninfra"
      + private_endpoint_network_policies              = (known after apply)
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "s190d01-plantech"
      + service_endpoints                              = [
          + "Microsoft.KeyVault",
          + "Microsoft.Storage",
        ]
      + virtual_network_name                           = "s190d01-plantech-function-vn"

      + delegation {
          + name = "AFADelegationService"

          + service_delegation {
              + actions = [
                  + "Microsoft.Network/virtualNetworks/subnets/join/action",
                ]
              + name    = "Microsoft.App/environments"
            }
        }
    }

  # azurerm_subnet.function_storage will be created
  + resource "azurerm_subnet" "function_storage" {
      + address_prefixes                               = [
          + "10.0.1.0/24",
        ]
      + default_outbound_access_enabled                = true
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "s190d01-plantech-function-storage"
      + private_endpoint_network_policies              = (known after apply)
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "s190d01-plantech"
      + virtual_network_name                           = "s190d01-plantech-function-vn"
    }

  # azurerm_subnet.keyvault will be created
  + resource "azurerm_subnet" "keyvault" {
      + address_prefixes                               = [
          + "172.16.7.0/24",
        ]
      + default_outbound_access_enabled                = true
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "s190d01-plantech-keyvault-endpoint"
      + private_endpoint_network_policies              = (known after apply)
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "s190d01-plantech"
      + virtual_network_name                           = "s190d01-plantechdefault"
    }

  # azurerm_subnet_route_table_association.keyvault will be created
  + resource "azurerm_subnet_route_table_association" "keyvault" {
      + id             = (known after apply)
      + route_table_id = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Network/routeTables/s190d01-plantechdefault"
      + subnet_id      = (known after apply)
    }

  # azurerm_virtual_network.function_vnet will be created
  + resource "azurerm_virtual_network" "function_vnet" {
      + address_space       = [
          + "10.0.0.0/14",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "northeurope"
      + name                = "s190d01-plantech-function-vn"
      + resource_group_name = "s190d01-plantech"
      + subnet              = (known after apply)
      + tags                = {
          + "Environment"      = "Dev"
          + "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }
    }

  # azurerm_virtual_network_peering.function_to_main will be created
  + resource "azurerm_virtual_network_peering" "function_to_main" {
      + allow_forwarded_traffic                = true
      + allow_gateway_transit                  = false
      + allow_virtual_network_access           = true
      + id                                     = (known after apply)
      + name                                   = "s190d01-plantech-defaultvn-peer"
      + peer_complete_virtual_networks_enabled = true
      + remote_virtual_network_id              = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Network/virtualNetworks/s190d01-plantechdefault"
      + resource_group_name                    = "s190d01-plantech"
      + use_remote_gateways                    = false
      + virtual_network_name                   = "s190d01-plantech-function-vn"
    }

  # azurerm_virtual_network_peering.main_to_function will be created
  + resource "azurerm_virtual_network_peering" "main_to_function" {
      + allow_forwarded_traffic                = true
      + allow_gateway_transit                  = false
      + allow_virtual_network_access           = true
      + id                                     = (known after apply)
      + name                                   = "s190d01-plantech-functionvn-peer"
      + peer_complete_virtual_networks_enabled = true
      + remote_virtual_network_id              = (known after apply)
      + resource_group_name                    = "s190d01-plantech"
      + use_remote_gateways                    = false
      + virtual_network_name                   = "s190d01-plantechdefault"
    }

  # module.main_hosting.azapi_update_resource.mssql_security_storage_key_rotation_reminder[0] will be created
  + resource "azapi_update_resource" "mssql_security_storage_key_rotation_reminder" {
      + body                    = jsonencode(
            {
              + properties = {
                  + keyPolicy = {
                      + keyExpirationPeriodInDays = 90
                    }
                }
            }
        )
      + id                      = (known after apply)
      + ignore_casing           = false
      + ignore_missing_property = true
      + name                    = (known after apply)
      + output                  = (known after apply)
      + parent_id               = (known after apply)
      + resource_id             = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Storage/storageAccounts/s190d01plantechmssqlsec"
      + type                    = "Microsoft.Storage/storageAccounts@2023-01-01"
    }

  # module.main_hosting.azurerm_monitor_diagnostic_setting.mssql_security_storage[0] will be updated in-place
  ~ resource "azurerm_monitor_diagnostic_setting" "mssql_security_storage" {
        id                         = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Storage/storageAccounts/s190d01plantechmssqlsec/blobServices/default|s190d01-plantech-mssql-blob-diag"
        name                       = "s190d01-plantech-mssql-blob-diag"
        # (2 unchanged attributes hidden)

       metric {
           category = "Capacity" -> null
           enabled  = false -> null

           retention_policy {
               days    = 0 -> null
               enabled = false -> null
            }
        }
       metric {
           category = "Transaction" -> null
           enabled  = false -> null

           retention_policy {
               days    = 0 -> null
               enabled = false -> null
            }
        }
      + metric {
          + category = "AllMetrics"
          + enabled  = false
        }

        # (3 unchanged blocks hidden)
    }

  # module.main_hosting.azurerm_private_dns_a_record.mssql_private_endpoint[0] will be updated in-place
  ~ resource "azurerm_private_dns_a_record" "mssql_private_endpoint" {
        id                  = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Network/privateDnsZones/s190d01-plantech.database.windows.net/A/@"
        name                = "@"
      ~ tags                = {
            "Environment"      = "Dev"
            "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }
        # (5 unchanged attributes hidden)
    }

  # module.main_hosting.azurerm_private_dns_zone.mssql_private_link[0] will be updated in-place
  ~ resource "azurerm_private_dns_zone" "mssql_private_link" {
        id                                                    = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Network/privateDnsZones/s190d01-plantech.database.windows.net"
        name                                                  = "s190d01-plantech.database.windows.net"
      ~ tags                                                  = {
            "Environment"      = "Dev"
            "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }
        # (5 unchanged attributes hidden)

        # (1 unchanged block hidden)
    }

  # module.main_hosting.azurerm_private_dns_zone_virtual_network_link.mssql_private_link[0] will be updated in-place
  ~ resource "azurerm_private_dns_zone_virtual_network_link" "mssql_private_link" {
        id                    = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Network/privateDnsZones/s190d01-plantech.database.windows.net/virtualNetworkLinks/s190d01-plantechmssqlprivatelink"
        name                  = "s190d01-plantechmssqlprivatelink"
      ~ tags                  = {
            "Environment"      = "Dev"
            "Product"          = "Plan Technology for your School"
          + "Service Offering" = "Plan Technology for your School"
        }
        # (4 unchanged attributes hidden)
    }

  # module.main_hosting.azurerm_storage_account.mssql_security_storage[0] will be updated in-place
  ~ resource "azurerm_storage_account" "mssql_security_storage" {
      ~ cross_tenant_replication_enabled  = true -> false
        id                                = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Storage/storageAccounts/s190d01plantechmssqlsec"
        name                              = "s190d01plantechmssqlsec"
        tags                              = {
            "Environment"      = "Dev"
            "Product"          = "Plan Technology for your School"
            "Service Offering" = "Plan Technology for your School"
        }
        # (39 unchanged attributes hidden)

        # (4 unchanged blocks hidden)
    }

  # module.main_hosting.azurerm_storage_management_policy.mssql_security_storage[0] will be created
  + resource "azurerm_storage_management_policy" "mssql_security_storage" {
      + id                 = (known after apply)
      + storage_account_id = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Storage/storageAccounts/s190d01plantechmssqlsec"

      + rule {
          + enabled = true
          + name    = "object-lifecycle-policy"

          + actions {
              + base_blob {
                  + delete_after_days_since_creation_greater_than                  = 30
                  + delete_after_days_since_last_access_time_greater_than          = -1
                  + delete_after_days_since_modification_greater_than              = -1
                  + tier_to_archive_after_days_since_creation_greater_than         = 7
                  + tier_to_archive_after_days_since_last_access_time_greater_than = -1
                  + tier_to_archive_after_days_since_last_tier_change_greater_than = -1
                  + tier_to_archive_after_days_since_modification_greater_than     = -1
                  + tier_to_cold_after_days_since_creation_greater_than            = -1
                  + tier_to_cold_after_days_since_last_access_time_greater_than    = -1
                  + tier_to_cold_after_days_since_modification_greater_than        = -1
                  + tier_to_cool_after_days_since_creation_greater_than            = 3
                  + tier_to_cool_after_days_since_last_access_time_greater_than    = -1
                  + tier_to_cool_after_days_since_modification_greater_than        = -1
                }
            }

          + filters {
              + blob_types   = [
                  + "blockBlob",
                ]
              + prefix_match = [
                  + "s190d01-plantech-mssqlsec/*",
                  + "sqldbauditlogs/*",
                  + "sqldbtdlogs/*",
                ]
            }
        }
    }

  # module.main_hosting.azurerm_subnet.container_apps_infra_subnet[0] will be updated in-place
  ~ resource "azurerm_subnet" "container_apps_infra_subnet" {
        id                                             = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Network/virtualNetworks/s190d01-plantechdefault/subnets/s190d01-plantechcontainerappsinfra"
        name                                           = "s190d01-plantechcontainerappsinfra"
      ~ service_endpoints                              = [
          + "Microsoft.Storage",
            # (1 unchanged element hidden)
        ]
        # (10 unchanged attributes hidden)
    }

  # module.waf.data.azurerm_client_config.current will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "azurerm_client_config" "current" {
      + client_id       = (known after apply)
      + id              = (known after apply)
      + object_id       = (known after apply)
      + subscription_id = (known after apply)
      + tenant_id       = (known after apply)
    }

  # module.waf.data.azurerm_resource_group.existing_resource_group[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "azurerm_resource_group" "existing_resource_group" {
      + id         = (known after apply)
      + location   = (known after apply)
      + managed_by = (known after apply)
      + name       = "s190d01-plantech"
      + tags       = (known after apply)
    }

  # module.waf.azurerm_log_analytics_workspace.waf must be replaced
-/+ resource "azurerm_log_analytics_workspace" "waf" {
       cmk_for_query_forced                    = false -> null
      ~ id                                      = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.OperationalInsights/workspaces/s190d01-plantechwaf" -> (known after apply)
       immediate_data_purge_on_30_days_enabled = false -> null
      ~ location                                = "westeurope" # forces replacement -> (known after apply) # forces replacement
        name                                    = "s190d01-plantechwaf"
      ~ primary_shared_key                      = (sensitive value)
      ~ secondary_shared_key                    = (sensitive value)
        tags                                    = {
            "Environment"      = "Dev"
            "Product"          = "Plan Technology for your School"
            "Service Offering" = "Plan Technology for your School"
        }
      ~ workspace_id                            = "ad83d73f-e297-40a3-b069-70130bb1f789" -> (known after apply)
        # (8 unchanged attributes hidden)
    }

  # module.waf.azurerm_monitor_diagnostic_setting.waf will be updated in-place
  ~ resource "azurerm_monitor_diagnostic_setting" "waf" {
        id                             = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.Cdn/profiles/s190d01-plantech-cdnwaf|s190d01-plantechwaf"
      + log_analytics_destination_type = "AzureDiagnostics"
      ~ log_analytics_workspace_id     = "/subscriptions/01ca3b42-9780-4628-806b-79279e3c7e89/resourceGroups/s190d01-plantech/providers/Microsoft.OperationalInsights/workspaces/s190d01-plantechwaf" -> (known after apply)
        name                           = "s190d01-plantechwaf"
        # (1 unchanged attribute hidden)

        # (6 unchanged blocks hidden)
    }

Plan: 28 to add, 9 to change, 5 to destroy.
╷
│ Warning: Deprecated Resource
│ 
│   with data.azurerm_sql_server.database,
│   on database.tf line 1, in data "azurerm_sql_server" "database":
│    1: data "azurerm_sql_server" "database" [4m{
│ 
│ The `azurerm_sql_server` data source is deprecated and will be removed in version 4.0 of the AzureRM provider. Please use the `azurerm_mssql_server` data source instead.
│ 
│ (and one more similar warning elsewhere)
╵
╷
│ Warning: Argument is deprecated
│ 
│   with module.main_hosting.azurerm_route_table.default,
│   on .terraform/modules/main_hosting/virtual-network.tf line 19, in resource "azurerm_route_table" "default":
│   19:   disable_bgp_route_propagation = [4mfalse
│ 
│ The property `disable_bgp_route_propagation` has been superseded by the property `bgp_route_propagation_enabled` and will be removed in v4.0 of the AzureRM Provider.
│ 
│ (and 10 more similar warnings elsewhere)
╵

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
