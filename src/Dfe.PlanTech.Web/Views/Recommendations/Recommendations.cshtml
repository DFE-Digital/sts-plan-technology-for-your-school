@using Dfe.PlanTech.Application.Constants
@using Dfe.PlanTech.Domain.Content.Models
@using Dfe.PlanTech.Domain.Questionnaire.Models
@using GovUk.Frontend.AspNetCore.TagHelpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Dfe.PlanTech.Web.Models.RecommendationsViewModel

@{
    Layout = "_RecommendationsLayout";
}

@* placeholder button name until we have the new tsubtopic page created *@
@section BeforeContent {
    <govuk-back-link id="nonjs-back-button-link" href="@UrlConstants.HomePage" class="noprint non-js-only govuk-back-link">Home</govuk-back-link>
    <govuk-back-link id="back-button-link" href="@UrlConstants.HomePage" class="noprint js-only">
        Back to digital leadership and governance
    </govuk-back-link>
}

<!-- The page is rendered within the header section to allow for both a full width blue backdrop,
and the headers & chunks to have a shared parent for displaying based on anchor tab -->

@section Header {
    <link rel="stylesheet" as="style" href="~/css/step-by-step.css">
}
    <div class="recommendation-content">
            @{
                var allContent = Model.Chunks.ToArray();
            } 

            @for (var x = 0; x < allContent.Length; x++)
            {
                var headerWithContent = allContent[x];
                var previousContent = x - 1 >= 0 ? allContent[x - 1] : null;
                var nextContent = x + 1 < allContent.Length ? allContent[x + 1] : null;         

                <div class="recommendation-piece-container" id="@headerWithContent.SlugifiedLinkText">
                        <div class="govuk-grid-row">

                            <partial name="Components/VerticalNavigation/Default" model="@Model" />

                            <div class="govuk-grid-column-two-thirds">
                                <partial name="Content" model="new HeaderContentViewModel {
                                                        Header = headerWithContent,
                                                        SectionName = Model.SectionName,
                                                        RecommendationCount = allContent.Length,
                                                        CurrentRecommendationPageCount = x + 1
                                }" />                                                   
                                <partial name="Pagination" model="@(Previous: previousContent, Next:nextContent)" />
                            </div>
                        </div>
                </div>
            }
    </div>
