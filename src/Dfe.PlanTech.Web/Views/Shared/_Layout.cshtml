@inject ICurrentUser CurrentUser

@section Head {
    <partial name="_Head"/>
    @await RenderSectionAsync("Head", required: false)
}

@{
    Layout = "_GovUkPageTemplate";

    if (ViewData["Title"] == null)
    {
        var routeData = Context.GetRouteData();
        ViewData["Title"] = routeData.GetTitleForPage();
    }
}

@{
    var hasOuter = IsSectionDefined("DfePageHeaderOuter");
    var hasInner = IsSectionDefined("DfePageHeaderInner");
    var hasPageHeader = hasOuter || hasInner;

    bool showChangeSchool = false;

    @* Conditionally show the change school partial on all pages except for specific pages in the exclusion list for MAT's*@
    if (CurrentUser.IsAuthenticated && CurrentUser.IsMat)
    {
        var controller = (string?)ViewContext.RouteData.Values["controller"] ?? "";
        var action = (string?)ViewContext.RouteData.Values["action"] ?? "";

        var excluded = new Dictionary<string, HashSet<string>>(StringComparer.OrdinalIgnoreCase)
        {
            { "ReviewAnswers", new HashSet<string>(new[] { nameof(ReviewAnswersController.CheckAnswers) }, StringComparer.OrdinalIgnoreCase) },
            { "Questions",     new HashSet<string>(new[] { nameof(QuestionsController.GetQuestionBySlug) }, StringComparer.OrdinalIgnoreCase) },
            { "Groups",        new HashSet<string>(new[] { GroupsController.GetSelectASchoolAction }, StringComparer.OrdinalIgnoreCase) },
        };

        showChangeSchool = !(excluded.TryGetValue(controller, out var actions) && actions.Contains(action));
    }
}

@section Header {
    <partial name="GoogleTagManager/_Body"/>
    <partial name="CookiesBanner/_CookieBanner"/>
    <partial name="_Header"/>
    @await RenderSectionAsync("Header", required: false)

    @if (hasPageHeader)
    {
        <section class="dfe-page-header">
            <div class="govuk-width-container">
                <div class="govuk-grid-row">
                    <partial name="BetaHeader" />
                    <div class="govuk-grid-column-two-thirds">
                        @if (hasOuter)
                        {
                            @await RenderSectionAsync("DfePageHeaderOuter", required: false)
                        }
                        @if (showChangeSchool)
                        {
                            <partial name="ChangeSchool" model="CurrentUser.GroupSelectedSchoolName" />
                        }
                        @if (hasInner)
                        {
                            <div class="dfe-page-header-inner">
                                @await RenderSectionAsync("DfePageHeaderInner", required: false)
                            </div>
                        }
                    </div>
                </div>
            </div>
        </section>
    }

}

@section BeforeContent {
    @if (!hasPageHeader)
    {
        <partial name="BetaHeader" />
    }

    <partial name="_BeforeContent"/>
    @await RenderSectionAsync("BeforeContent", required: false)

    @if (!hasPageHeader && showChangeSchool)
    {
        <partial name="ChangeSchool" model="CurrentUser.GroupSelectedSchoolName" />
    }
}


@RenderBody()

@section Footer {
    <partial name="_Footer"/>
}

@section BodyEnd {
    <partial name="_BodyEnd"/>
    @await RenderSectionAsync("BodyEnd", required: false)
}
