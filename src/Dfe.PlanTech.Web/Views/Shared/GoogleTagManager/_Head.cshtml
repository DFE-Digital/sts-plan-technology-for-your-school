@inject GoogleTagManagerServiceServiceConfiguration GtmService
@inject ICurrentUser CurrentUser

@if (!GtmService.CookieService.Cookie.UseCookies)
{
	// No consent: bail (or init Consent Mode here if you use it)
	return;
}

@{
	var isAuthenticated = CurrentUser.IsAuthenticated;
	object? dataLayerObj = null;

	if (isAuthenticated)
	{
		var establishmentReference = CurrentUser.ActiveEstablishmentReference ?? "Unknown";
		var establishmentType = CurrentUser.UserOrganisationTypeName ?? "Unknown";
		var userDsiReference = CurrentUser.DsiReference;

		dataLayerObj = new
		{
			establishment_reference = establishmentReference,
			establishment_type = establishmentType,
			user_dsi_reference = userDsiReference
		};
	}

	var jsonOptions = new JsonSerializerOptions
	{
		DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingNull
	};
	var dataLayerJson = dataLayerObj is null ? "" : JsonSerializer.Serialize(dataLayerObj, jsonOptions);
	var nonce = Context.Items["nonce"]?.ToString();
}

@if (!string.IsNullOrEmpty(GtmService.Config.SiteVerificationId))
{
	<meta name="google-site-verification" content="@GtmService.Config.SiteVerificationId" />
}

<script nonce="@nonce">
	(function (w, d, s, l, i) {
		w[l] = w[l] || [];

		if (@isAuthenticated.ToString().ToLower()) {
			// Push server-derived context first
			w[l].push(@Html.Raw(dataLayerJson));
		}

		// Then the GTM boot event
		w[l].push({
			'gtm.start': new Date().getTime(),
			'event': 'gtm.js'
		});

		var f = d.getElementsByTagName(s)[0],
			j = d.createElement(s),
			dl = l != 'dataLayer' ? '&l=' + l : '';
		j.async = true;

		// Carry CSP nonce to external script
		var n = d.querySelector('[nonce]');
		if (n) { j.setAttribute('nonce', n.nonce || n.getAttribute('nonce')); }

		j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
		f.parentNode.insertBefore(j, f);
	})(window, document, 'script', 'dataLayer', '@GtmService.Config.Id');
</script>
