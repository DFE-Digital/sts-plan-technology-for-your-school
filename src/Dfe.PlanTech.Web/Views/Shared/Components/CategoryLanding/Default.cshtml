@model CategoryLandingViewComponentViewModel

@if (Model.NoSectionsErrorRedirectUrl != null)
{
    Context.Response.Redirect(Url.Content(Model.NoSectionsErrorRedirectUrl));
}

@if (Model.ProgressRetrievalErrorMessage != null)
{
<p id="progress-error" class="govuk-error-message">
    <span class="govuk-visually-hidden">Error:</span>@Model.ProgressRetrievalErrorMessage
</p>
}

@if (!string.IsNullOrEmpty(Model.SectionName))
{
    <div class="govuk-panel govuk-panel--confirmation">
        <h1 class="govuk-panel__title">
            Your self-assessment for @Model.SectionName.ToLower() is complete
        </h1>
        <div class="govuk-panel__body">
            Recommendations are available
        </div>
    </div>
}

@if (Model.CategoryLandingSections.Count != 1 && !Model.AllSectionsCompleted)
{
    <div class="govuk-inset-text">
        @{
            if (!Model.AnySectionsCompleted)
            {
                <p>You have not completed any self-assessments for the @Model.CategoryName.ToLower() standard. Complete self-assessments to view all recommendations.</p>
            }
            else if (Model.AllSectionsCompleted)
            {
                <p>You have completed all self-assessments for the @Model.CategoryName.ToLower() standard.</p>
            }
            else
            {
                <p>Complete the remaining self-assessments to get recommendations for your school's @Model.CategoryName.ToLower().</p>

                foreach (var topic in Model.CategoryLandingSections)
                {
                    <partial name="Components/CategoryLanding/SectionAssessmentLink" model='new StatusLinkViewModel { CategorySlug = @Model.CategorySlug, Section = topic, Context = "Default" }' />
                }
            }
        }
    </div>
}

<partial name="Components/CategoryLanding/Sections" model="@Model" />
