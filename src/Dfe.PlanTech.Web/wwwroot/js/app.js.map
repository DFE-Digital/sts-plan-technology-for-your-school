{
  "version": 3,
  "sources": ["../../scripts/browser-history.js", "../../scripts/app.js"],
  "sourcesContent": ["const STORAGE_KEY = \"BrowserHistory\";\r\nexport const DEFAULT_ROUTE = \"/self-assessment\";\r\nexport const BACK_BUTTON_ID = \"back-button-link\";\r\nexport const NOTIFICATION_BANNER_GO_BACK_LINK_ID = \"notification-go-back-link\";\r\n/**\r\n * Tracks a users browser history, stores it in local storage, and amends the back button link (if existing on page)\r\n */\r\nexport class BrowserHistory {\r\n    history = [];\r\n\r\n    get lastUrl() {\r\n        if (this.history.length > 0) {\r\n            if (this.getLastRef() == window.location.href) {\r\n                return this.history[this.history.length - 2];\r\n            }\r\n            return this.history[this.history.length - 1];\r\n        }\r\n\r\n        return DEFAULT_ROUTE;\r\n    }\r\n\r\n    constructor() {\r\n        this.history = this.getHistory();\r\n\r\n        this.ifNavigatingBackwardsRemoveUrl();\r\n        this.amendLinkHref(BACK_BUTTON_ID);\r\n        this.amendLinkHref(NOTIFICATION_BANNER_GO_BACK_LINK_ID);\r\n        this.tryAddUrl();\r\n    }\r\n\r\n    /**\r\n     * Adds current window href to history\r\n     */\r\n    tryAddUrl() {\r\n        const lastHref = this.history.length > 0 ? this.history[this.history.length - 1] : \"\";\r\n        if (window.location.href == lastHref) {\r\n            return;\r\n        }\r\n\r\n        this.history.push(window.location.href);\r\n        this.saveHistory();\r\n    }\r\n\r\n    getLastRef() {\r\n        return this.history.length > 0 ? this.history[this.history.length - 1] : \"\";\r\n    }\r\n\r\n    /**\r\n     * Checks to see if we are navigating backwards, if so removes URL(s) from history\r\n     * @returns {boolean} Whether we are navigating backwards or not\r\n     */\r\n    ifNavigatingBackwardsRemoveUrl() {\r\n        if (this.history.length == 0) {\r\n            return false;\r\n        }\r\n\r\n        const lastIndex = this.history.length - 2;\r\n\r\n        if (lastIndex < 0) {\r\n            return false;\r\n        }\r\n\r\n        const navigatingBackwards = this.history[lastIndex] == window.location.href;\r\n\r\n        if (!navigatingBackwards) {\r\n            return false;\r\n        }\r\n\r\n        this.history = this.history.slice(0, lastIndex);\r\n        this.saveHistory();\r\n        return true;\r\n    }\r\n\r\n    getHistory() {\r\n        if (this.shouldClearHistory()) {\r\n            this.clearHistory();\r\n        }\r\n\r\n        const fromStorage = localStorage.getItem(STORAGE_KEY);\r\n\r\n        if (fromStorage) {\r\n            return JSON.parse(fromStorage);\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    saveHistory() {\r\n        const stringified = JSON.stringify(this.history);\r\n        localStorage.setItem(STORAGE_KEY, stringified);\r\n    }\r\n\r\n    clearHistory() {\r\n        this.history = [];\r\n        this.saveHistory();\r\n    }\r\n\r\n    /**\r\n     * Gets the back button link from the page, if it exists amend HREF to be last url in history\r\n     */\r\n    amendLinkHref(id) {\r\n        const backButtonLink = document.getElementById(id);\r\n\r\n        if (!backButtonLink) {\r\n            return;\r\n        }\r\n\r\n        backButtonLink.setAttribute(\"href\", this.lastUrl);\r\n    }\r\n\r\n    shouldClearHistory() {\r\n        return window.location.pathname == \"/\" || window.location.pathname == DEFAULT_ROUTE;\r\n    }\r\n}", "import { BrowserHistory } from \"./browser-history\";\r\n\r\nnew BrowserHistory();"],
  "mappings": "MAAA,IAAMA,EAAc,iBACPC,EAAgB,mBAChBC,EAAiB,mBACjBC,EAAsC,4BAItCC,EAAN,KAAqB,CACxB,QAAU,CAAC,EAEX,IAAI,SAAU,CACV,OAAI,KAAK,QAAQ,OAAS,EAClB,KAAK,WAAW,GAAK,OAAO,SAAS,KAC9B,KAAK,QAAQ,KAAK,QAAQ,OAAS,CAAC,EAExC,KAAK,QAAQ,KAAK,QAAQ,OAAS,CAAC,EAGxCH,CACX,CAEA,aAAc,CACV,KAAK,QAAU,KAAK,WAAW,EAE/B,KAAK,+BAA+B,EACpC,KAAK,cAAcC,CAAc,EACjC,KAAK,cAAcC,CAAmC,EACtD,KAAK,UAAU,CACnB,CAKA,WAAY,CACR,IAAME,EAAW,KAAK,QAAQ,OAAS,EAAI,KAAK,QAAQ,KAAK,QAAQ,OAAS,CAAC,EAAI,GAC/E,OAAO,SAAS,MAAQA,IAI5B,KAAK,QAAQ,KAAK,OAAO,SAAS,IAAI,EACtC,KAAK,YAAY,EACrB,CAEA,YAAa,CACT,OAAO,KAAK,QAAQ,OAAS,EAAI,KAAK,QAAQ,KAAK,QAAQ,OAAS,CAAC,EAAI,EAC7E,CAMA,gCAAiC,CAC7B,GAAI,KAAK,QAAQ,QAAU,EACvB,MAAO,GAGX,IAAMC,EAAY,KAAK,QAAQ,OAAS,EAQxC,OANIA,EAAY,GAMZ,EAFwB,KAAK,QAAQA,CAAS,GAAK,OAAO,SAAS,MAG5D,IAGX,KAAK,QAAU,KAAK,QAAQ,MAAM,EAAGA,CAAS,EAC9C,KAAK,YAAY,EACV,GACX,CAEA,YAAa,CACL,KAAK,mBAAmB,GACxB,KAAK,aAAa,EAGtB,IAAMC,EAAc,aAAa,QAAQP,CAAW,EAEpD,OAAIO,EACO,KAAK,MAAMA,CAAW,EAG1B,CAAC,CACZ,CAEA,aAAc,CACV,IAAMC,EAAc,KAAK,UAAU,KAAK,OAAO,EAC/C,aAAa,QAAQR,EAAaQ,CAAW,CACjD,CAEA,cAAe,CACX,KAAK,QAAU,CAAC,EAChB,KAAK,YAAY,CACrB,CAKA,cAAcC,EAAI,CACd,IAAMC,EAAiB,SAAS,eAAeD,CAAE,EAE5CC,GAILA,EAAe,aAAa,OAAQ,KAAK,OAAO,CACpD,CAEA,oBAAqB,CACjB,OAAO,OAAO,SAAS,UAAY,KAAO,OAAO,SAAS,UAAYT,CAC1E,CACJ,EC/GA,IAAIU",
  "names": ["STORAGE_KEY", "DEFAULT_ROUTE", "BACK_BUTTON_ID", "NOTIFICATION_BANNER_GO_BACK_LINK_ID", "BrowserHistory", "lastHref", "lastIndex", "fromStorage", "stringified", "id", "backButtonLink", "BrowserHistory"]
}
